// Generated by CoffeeScript 1.6.3
"use strict";
var Objectify, StyleJS;

Objectify = (function() {
  function Objectify(name) {
    this.name = name;
    this.obj = {};
    this.obj['name'] = this.name;
  }

  Objectify.prototype.add = function(selectors, property, value) {
    if (!this.obj[selectors]) {
      this.obj[selectors] = {};
    }
    return this.obj[selectors][property] = value;
  };

  Objectify.prototype.href = function() {
    return "data:text/json;charset=utf-8," + (encodeURIComponent(JSON.stringify(this.obj, void 0, 4)));
  };

  return Objectify;

})();

String.prototype.capitalize = function() {
  return this.substr(0, 1).toUpperCase() + this.substr(1);
};

String.prototype.toJSProperty = function() {
  var js_prop;
  js_prop = this.split('-').map(function(e) {
    return e.capitalize();
  }).join('');
  return js_prop.substr(0, 1).toLowerCase() + js_prop.substr(1);
};

StyleJS = (function() {
  StyleJS.prototype.element = null;

  StyleJS.prototype.downloadButton = null;

  function StyleJS(config) {
    var elements, input, item, property, self, _i, _j, _len, _len1, _ref, _ref1;
    this.config = config;
    this.element = document.createElement("div");
    this.element.className = "style-js-root";
    this.downloadButton = document.createElement("a");
    this.downloadButton.download = "stylejs.json";
    this.downloadButton.innerHTML = "download";
    this.objectify = new Objectify;
    self = this;
    _ref = this.config.items;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      elements = document.body.querySelectorAll(item.selectors);
      _ref1 = item.properties;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        property = _ref1[_j];
        input = document.createElement('input');
        input.setAttribute('type', property.type);
        input.setAttribute('data-property', property.name);
        input.setAttribute('data-selectors', item.selectors);
        input.value = property.initial;
        input.className = "style-js-input";
        input.onchange = function() {
          var element, targAttr, targAttrJS, targSelectors, value, _k, _len2, _results;
          targAttr = this.getAttribute("data-property");
          value = this.value;
          targSelectors = this.getAttribute("data-selectors");
          self.objectify.add(targSelectors, targAttr, value);
          self.downloadButton.href = self.objectify.href();
          targAttrJS = targAttr.toJSProperty();
          _results = [];
          for (_k = 0, _len2 = elements.length; _k < _len2; _k++) {
            element = elements[_k];
            _results.push(element.style[targAttrJS] = this.value);
          }
          return _results;
        };
        input.onkeyup = input.onchange;
        this.element.appendChild(input);
      }
    }
    this.element.appendChild(this.downloadButton);
    document.body.appendChild(this.element);
  }

  StyleJS.prototype.showIn = function(selector) {
    return alert("Not Implemented");
  };

  StyleJS.prototype.hide = function() {
    return alert("Not Implemented");
  };

  StyleJS.prototype.show = function() {
    return alert("Not Implemented");
  };

  return StyleJS;

})();

window.StyleJS = StyleJS;
